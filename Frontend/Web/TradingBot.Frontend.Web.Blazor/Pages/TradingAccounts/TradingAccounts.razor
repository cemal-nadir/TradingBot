@page "/Users/TradingAccounts"
@page "/Users/{UserId}/TradingAccounts"
@using TradingBot.Frontend.Web.Blazor.Dtos.Users
@using System.Globalization
@inherits TradingAccountsRazor
<LoadingPage Visible="@Loading"></LoadingPage>
<MudStack Row="true" Justify="Justify.FlexEnd">
	<MudIconButton OnClick="AddNew" Icon="@Icons.Material.Filled.Add" Size="Size.Medium" Color="Color.Primary"/>
	@if (SelectedEntities != null && SelectedEntities.Any())
	{
		<MudIconButton OnClick="DeleteRangeAsync" Icon="@Icons.Material.Filled.DeleteSweep" Size="Size.Medium" Color="Color.Error" />
	}

</MudStack>
<MudDataGrid Culture="CultureInfo.CurrentCulture"
             Items="@Entities"
             ColumnResizeMode="ResizeMode.Column"
             Striped="true"
             T="TradingAccountsDto"
             MultiSelection="true"
             Filterable="true"
             FilterMode="DataGridFilterMode.ColumnFilterRow"
             SelectedItemsChanged="SelectedItemsChanged">
	<Columns>
		<SelectColumn T="TradingAccountsDto" />
		<PropertyColumn Property="x => x.UserName" Title="@Localizer["TradingAccounts_User_NameAndSurname"]"/>
		<PropertyColumn Property="x => x.UserMail" Title="@Localizer["TradingAccounts_User_Mail"]" />
		<PropertyColumn Property="x => x.Name" Title="@Localizer["TradingAccounts_Name"]" />
		<PropertyColumn Property="x => x.Platform" Title="@Localizer["TradingAccounts_Platform"]" />
		<PropertyColumn Property="x => x.IsActive" Title="@Localizer["TradingAccounts_IsActive"]">
			<CellTemplate>
				
				@if (context.Item.IsActive)
				{
					<MudChip Icon="@Icons.Material.Filled.Check" IconColor="Color.Success">@Localizer["Active"]</MudChip>
				}
				else
				{
					<MudChip Icon="@Icons.Material.Filled.Cancel" IconColor="Color.Error">@Localizer["Passive"]</MudChip>
				}
			</CellTemplate>
		</PropertyColumn>
		<PropertyColumn Property="x=>x.Id" Title="@Localizer["Process"]">
			<CellTemplate>
				<MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Success" OnClick="@(async ()=>await EditAsync(context.Item.Id??""))"></MudIconButton>
				<MudIconButton Icon="@Icons.Material.Filled.RemoveCircle" Color="Color.Error" OnClick="@(async () => await DeleteAsync(context.Item.Id ?? ""))"></MudIconButton>
			</CellTemplate>
		</PropertyColumn>
	</Columns>
	<PagerContent>
		<MudDataGridPager T="TradingAccountsDto"/>
	</PagerContent>
</MudDataGrid>